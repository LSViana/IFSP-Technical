package JoaoSupermarket;

import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.prefs.Preferences;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import JoaoSupermarket.Model.*;
import JoaoSupermarket.View.*;
import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.BorderPane;
import javafx.stage.Modality;
import javafx.stage.Stage;

public class MainApp extends Application {

	private ObservableList<Produto> produtosDados = FXCollections.observableArrayList();
//	private ObservableList<Categoria> categoriasDados = FXCollections.observableArrayList();

	// Standard Constructor
	public MainApp() {
//		// Categorias
//		Categoria frutas = new Categoria("Frutas", "São docinhas, ou nem sempre!");
//		Categoria legumes = new Categoria("Legumes", "Fazem muito bem à saúde!");
//		Categoria carnes = new Categoria("Carnes", "Proteínas são mais do que necessárias!");
//		Categoria eletroeletronicos = new Categoria("Eletroeletrônicos", "O século XXI os trouxe até nós");
//		categoriasDados.addAll(frutas, legumes, carnes, eletroeletronicos);
		// Produtos
		produtosDados.add(new Produto("Banana", 50, 30, LocalDate.now().plusDays(1), "Fruits"));
		produtosDados.add(new Produto("Apple", 80, 50, LocalDate.now().plusDays(2), "Fruits"));
		produtosDados.add(new Produto("Pear", 35, 15, LocalDate.now().plusDays(3), "Fruits"));
		produtosDados.add(new Produto("Cellphone", 12, 5, LocalDate.now().plusYears(5), "Electronics"));
	}

	public ObservableList<Produto> getProdutosDados() {
		return produtosDados;
	}

    private Stage primaryStage;
    private BorderPane rootLayout;

    @Override
    public void start(Stage primaryStage) {
        this.primaryStage = primaryStage;
        this.primaryStage.setTitle("JoaoSupermarket");

        initRootLayout();

        showWelcomeOverview();
    }

    // Initializes the root layout.
    public void initRootLayout() {
        try {
            // Load root layout from fxml file.
            FXMLLoader loader = new FXMLLoader();
            loader.setLocation(MainApp.class.getResource("view/RootLayout.fxml"));
            rootLayout = (BorderPane) loader.load();

            // Show the scene containing the root layout.
            Scene scene = new Scene(rootLayout);
            primaryStage.setScene(scene);

            // Give the RootLayoutController access to the MainApp (class)
            RootLayoutController controller = loader.getController();
            controller.setMainApp(this);

            primaryStage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Shows the Produto overview inside the root layout.
    public void showWelcomeOverview() {
        try {
            // Load welcome overview.
            FXMLLoader loader = new FXMLLoader();
            loader.setLocation(MainApp.class.getResource("View/ProdutoOverview.fxml"));
            AnchorPane welcomeOverview = (AnchorPane) loader.load();

            // Set person overview into the center of root layout.
            rootLayout.setCenter(welcomeOverview);

            // Give the Controller access to the Main App
            WelcomeOverviewController controller = loader.getController();
            controller.setMainApp(this);

            primaryStage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Tries to load last opened person file
        File file = getProdutoFilePath();
        System.out.println(file);
        if(file != null) {
        	loadProdutoDataFromFile(file);
        }
    }

    /*
     *	Method to edit Produto details and if the user clicks OK and everything
     *	goes fine, it returns true, false otherwise.
     */
    public boolean showProdutoEditDialog(Produto produto) {
    	try {
			// Load the FXML file and create a new stage to show edit dialog
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(MainApp.class.getResource("View/ProdutoEditDialog.fxml"));
			AnchorPane page = (AnchorPane) loader.load();
			// Create the dialog stage ("scene")
			Stage dialogStage = new Stage();
			dialogStage.setTitle("Editar Produto");
			dialogStage.initModality(Modality.WINDOW_MODAL);
			dialogStage.initOwner(primaryStage);
			Scene scene = new Scene(page);
			dialogStage.setScene(scene);
			// Set the Produto into the "ProductEditDialogController" (Controller)
			ProductEditDialogController controller = loader.getController();
			controller.setDialogStage(dialogStage);
			controller.setProduto(produto);
			// Show the dialog and wait until the user closes it
			dialogStage.showAndWait();
			return controller.clicouOK();
    	}
    	catch (Exception exc) {
			exc.printStackTrace();
			return false;
    	}
    }

    // Returns the main stage
    public Stage getPrimaryStage() {
        return primaryStage;
    }

    public static void main(String[] args) {
        launch(args);
    }

    // Methods to save user's preferences
    public File getProdutoFilePath() {
    	Preferences prefs = Preferences.userNodeForPackage(MainApp.class);
    	String filePath = prefs.get("filePath", null);
    	if (filePath != null) {
    		return new File(filePath);
    	}
    	else {
    		return null;
    	}
    }

    /*
     *	Sets the file path of the currently loaded file, the path
     *	might change depending on the OS specific registry
     */
    public void setProdutoFilePath(File file) {
    	Preferences prefs = Preferences.userNodeForPackage(MainApp.class);
    	if (file != null) {
    		prefs.put("filePath", file.getPath());
    		// Update the stage title
    		primaryStage.setTitle("Vendinha do Seu João - " + file.getName());
    	}
    	else {
    		prefs.remove("filePath");
    		// Update the stage title
    		primaryStage.setTitle("Vendinha do Seu João");
    	}
    }

    // Methods responsible to READ and WRITE data with JAXB (Java Architecture XML Binding)

    // Method to load Produto data from file
    public void loadProdutoDataFromFile(File file) {
        try {
            JAXBContext context = JAXBContext
                    .newInstance(ProdutoListaWrapper.class);
            Unmarshaller um = context.createUnmarshaller();

            // Reading XML from the file and unmarshalling
            ProdutoListaWrapper wrapper = (ProdutoListaWrapper) um.unmarshal(file);

            produtosDados.clear();
            produtosDados.addAll(wrapper.getProdutos());

            // Save the file path to the registry.
            setProdutoFilePath(file);

        }
        catch (Exception e) { // catches ANY exception
        	System.out.println(e.getMessage());

            Alert alert = new Alert(AlertType.ERROR);
            alert.setTitle("Erro");
            alert.setHeaderText("Não foi possível carregar os dados!");
            alert.setContentText("Não foi possível carregar os dados do arquivo:\n" + file.getPath());

            alert.showAndWait();
        }
    }

    // Method to save Produto data to the file
    public void saveProdutoDataToFile(File file) {
        try {
            JAXBContext context = JAXBContext
                    .newInstance(ProdutoListaWrapper.class);
            Marshaller m = context.createMarshaller();
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);

            // Wrapping our person data.
            ProdutoListaWrapper wrapper = new ProdutoListaWrapper();
            for(Produto prod : produtosDados) {
            	System.out.println(prod.getNome());
            }
            wrapper.setProdutos(produtosDados);

            // Marshalling and saving XML to the file.
            m.marshal(wrapper, file);

            // Save the file path to the registry.
            setProdutoFilePath(file);
        } catch (Exception e) { // catches ANY exception
        	System.out.println(e.getMessage());

            Alert alert = new Alert(AlertType.ERROR);
            alert.setTitle("Erro");
            alert.setHeaderText("Não foi possível salvar os dados!");
            alert.setContentText("Não foi possível salvar os dados no arquivo:\n" + file.getPath());

            alert.showAndWait();
        }
    }
}
/*
import javafx.application.Application;
import javafx.stage.Stage;

public class MainApp extends Application {

	@Override
	public void start(Stage primaryStage) {

	}

	public static void main(String[] args) {
		launch(args);
	}
}
*/